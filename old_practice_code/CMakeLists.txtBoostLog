#'cmake --help-module FindBoost' illustrates more on how to use 
# cmake with boost
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
#set(Boost_USE_STATIC_LIBS OFF)		# set to off by default
#set(Boost_USE_STATIC_RUNTIME OFF)
ADD_DEFINITIONS(-DBOOST_ALL_DYN_LINK)	# must for dyanmic library linking
#add_definitions(-DBoost_NO_BOOST_CMAKE=ON)
set(CMAKE_CXX_FLAGS "--std=c++11")

#set(Boost_ADDITIONAL_VERSIONS "1.54" "1.54.0")
#set(BOOST_LIBRARYDIR /usr/local/lib)
find_package(Boost 1.54.0 COMPONENTS filesystem log log_setup thread system REQUIRED)	#EXACT	REQUIRED thread
if(${Boost_FOUND})
	include_directories(${Boost_INCLUDE_DIRS})
	add_executable(boostLogX boostLogX.cpp)
	target_link_libraries(boostLogX
#						  ${Boost_PROGRAM_OPTIONS_LIBRARIES}
						  ${Boost_LOG_LIBRARY}
						  ${Boost_THREAD_LIBRARY}
						  ${Boost_SYSTEM_LIBRARY}
						  ${Boost_LOG_SETUP_LIBRARY}
#						  ${Boost_FILESYSTEM_LIBRARY}
#						  boost_system.so
#						  boost_log.so
#						  ${Boost_LIBRARIES}
#						  ${CMAKE_THREAD_LIBS_INIT}
						 )
endif()
#FIND_PACKAGE(Boost 1.54 COMPONENTS log REQUIRED)
#FIND_PACKAGE(Threads)
#INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
#ADD_DEFINITIONS(-DBOOST_ALL_DYN_LINK)	# must for dyanmic library linking
#ADD_EXECUTABLE(boostLogX boostLogX.cpp) 
#TARGET_LINK_LIBRARIES(boostLogX boost_log.so ${CMAKE_THREAD_LIBS_INIT}) # the .so version required (not .a version, which is returned by ${Boost_LOG_LIBRARY}, which is a static version)
message(STATUS ${Boost_LOG_LIBRARY})
message(STATUS ${Boost_SYSTEM_LIBRARY})
message(STATUS ${Boost_LOG_SETUP_LIBRARY})
message(STATUS ${Boost_FILESYSTEM_LIBRARY})
message(STATUS ${Boost_INCLUDE_DIR})
message(STATUS ${Boost_LIBRARIES})
message(STATUS ${Boost_PROGRAM_OPTIONS_LIBRARIES})
