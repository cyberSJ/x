CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
#SET(Boost_USE_STATIC_LIBS FALSE)
add_definitions(-DBOOST_ALL_DYN_LINK)
set(CMAKE_CXX_FLAGS "-std=c++11")

link_directories(/home/sung/Downloads/boost_1_54_0/stage/lib)

find_package(Boost 1.54 COMPONENTS filesystem system)
if (${Boost_FOUND})
	message(STATUS "boost found!!!")
	include_directories(${Boost_INCLUDE_DIR})
	ADD_EXECUTABLE(boostFilesystemX boostFilesystemX.cpp) 
	#target_link_libraries(boostFilesystemX ${Boost_LIBRARIES})
	target_link_libraries(boostFilesystemX
						  #${Boost_PROGRAM_OPTIONS_LIBRARIES}
						  #${Boost_FILESYSTEM_LIBRARIES}
						  boost_filesystem.so
						  ${Boost_SYSTEM_LIBRARIES}
   					     )
endif()
#target_link_libraries(boostFilesystemX boost_system.so boost_filesystem.so)
#TARGET_LINK_LIBRARIES(boostLogX boost_log.so ${CMAKE_THREAD_LIBS_INIT}) # the .so version required (not .a version, which is returned by ${Boost_LOG_LIBRARY}, which is a static version)
message(STATUS ${Boost_FILESYSTEM_LIBRARY})
message(STATUS ${Boost_INCLUDE_DIR})
#INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
